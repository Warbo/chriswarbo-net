#!/usr/bin/env bash

function fail {
    echo "FAIL: $1" 1>&2
    exit 1
}

function allowedPatterns {
    # Data URIs can contain whitespace (indeed, they *should* according to the
    # base64 spec!)
    echo "Warning: <img> discarding newline in URI reference"
}

function check {
    # Return immediately if tidy is OK
    if STDERR=$(tidyCheck < "$1")
    then
        return
    fi

    # Otherwise, abort
    echo -e "Tidy failed for '$1':\\n\\n$STDERR\\n" 1>&2
    echo -e "---\\nEnd report for '$1'\\n\\n"       1>&2
    return 1
}

function tidyCheck {
    # Return immediately if tidy gives no errors
    TIDYERR=$(tidy -e 2>&1) && return

    # There doesn't seem to be a way to disable individual checks,
    # so we skip them ourselves

    WARNINGS=$(echo "$TIDYERR"          |
               grep "^Tidy found"       |
               grep -o "[0-9]* warning" |
               grep -o "[0-9]*")

    ERRORS=$(echo "$TIDYERR"        |
             grep "^Tidy found"     |
             grep -o "[0-9]* error" |
             grep -o "[0-9]*")

    TOTAL=$(( WARNINGS + ERRORS ))

    ALLOWED=0
    OUTPUT="$TIDYERR"


    while read -r PAT
    do
        OUTPUT=$(echo "$OUTPUT" | grep -v "$PAT")

        FOUND=$(echo "$TIDYERR" | grep -c "$PAT")
        ALLOWED=$(( ALLOWED + FOUND ))
    done < <(allowedPatterns)

    if [[ "$TOTAL" -gt "$ALLOWED" ]]
    then
        echo "$OUTPUT"
        return 1
    fi
}

check "$1" || exit 1
exit 0
