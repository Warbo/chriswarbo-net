#!/usr/bin/env bash

# Check calling convention
if [[ -z "$1" ]]
then
    echo "showPost requires an argument" >> /dev/stderr
    exit 1
fi

function getTitle {
    # Get the contents of <title />
    TTL=$(xidel - -q --extract "/html/head/title/text()" < "$1")
    [[ -n "$TTL" ]] && {
        echo "$TTL"
        return
    }

    TTL=$(xidel - -q --extract "//h1/text()" < "$1")
    [[ -n "$TTL" ]] && {
        echo "No <title /> element for '$1', falling back to <h1 />" >> /dev/stderr
        echo "$TTL"
        return
    }

    TTL=$(basename "$1" .html)
    [[ -n "$TTL" ]] && {
        echo "No <title /> element for '$1', falling back to filename" >> /dev/stderr
        echo "$TTL"
        return
    }

    TTL="Untitled"
    echo "No <title /> element for '$1', falling back to '$TTL'" >> /dev/stderr
    echo "$TTL"
}

function getDate {
    # Dates are in filenames
    basename "$1" | cut -c 1-10
}

function getUrl {
    # Strip local prefix off argument to get the post's URL
    echo "$1" | sed -e 's@.*rendered/@@'
}

function renderTime {
    DATE=$(getDate "$1")
    printf '<time class="dt-published" datetime="%s">%s</time>' "$DATE" "$DATE"
}

function renderLink {
    BASE="http://chriswarbo.net"
    TITLE=$(getTitle "$1")
    URL=$(getUrl "$1")
    printf '<a class="p-name u-url" href="%s/%s">%s</a>' "$BASE" "$URL" "$TITLE"
}

function renderEntry {
    TIME=$(renderTime "$1")
    LINK=$(renderLink "$1")
    printf '<li class="h-entry">%s - %s</li>' "$LINK" "$TIME"
}

renderEntry "$1"
